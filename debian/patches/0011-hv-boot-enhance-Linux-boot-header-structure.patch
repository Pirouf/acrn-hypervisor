From: Helmut Buchsbaum <helmut.buchsbaum@opensource.tttech-industrial.com>
Date: Tue, 9 Feb 2021 12:17:56 +0100
Subject: hv: boot: enhance Linux boot header structure

Complete the structure of struct zero_page according to Linux'
Documentation/x86/boot.txt and Documentation/x86/zeropage.txt.

Signed-off-by: Helmut Buchsbaum <helmut.buchsbaum@opensource.tttech-industrial.com>
---
 hypervisor/include/arch/x86/zeropage.h | 120 ++++++++++++++++++++++++++-------
 1 file changed, 95 insertions(+), 25 deletions(-)

diff --git a/hypervisor/include/arch/x86/zeropage.h b/hypervisor/include/arch/x86/zeropage.h
index 746ce29..dfb6d67 100644
--- a/hypervisor/include/arch/x86/zeropage.h
+++ b/hypervisor/include/arch/x86/zeropage.h
@@ -9,38 +9,108 @@
 #include <e820.h>
 #include <efi.h>
 
-struct zero_page {
-	uint8_t pad0[0x1c0];	/* 0x000 */
+/* APM BIOS information */
+struct apm_bios_info {
+	uint16_t version;	/* 0x040 */
+	uint16_t cseg;		/* 0x042 */
+	uint32_t offset;	/* 0x044 */
+	uint16_t cseg_16;	/* 0x048 */
+	uint16_t dseg;		/* 0x04a */
+	uint16_t flags;		/* 0x04c */
+	uint16_t cseg_len;	/* 0x04e */
+	uint16_t cseg_16_len;	/* 0x050 */
+	uint16_t dseg_len;	/* 0x052 */
+} __packed;
 
-	struct efi_info boot_efi_info;
+/* Intel SpeedStep (IST) BIOS support information */
+struct ist_info {
+	uint32_t signature;	/* 0x060 */
+	uint32_t command;	/* 0x064 */
+	uint32_t event;		/* 0x068 */
+	uint32_t perf_level;	/* 0x06c */
+} __packed;
 
-	uint8_t pad1[0x8];	/* 0x1e0 */
-	uint8_t e820_nentries;	/* 0x1e8 */
-	uint8_t pad2[0x8];	/* 0x1e9 */
+/* Linux zeropage */
+struct zero_page {
+	uint8_t screen_info[0x40];		/* 0x000 */
+	struct apm_bios_info apm_bios_info;	/* 0x040 */
+	uint8_t pad0[0x4];			/* 0x054 */
+	uint64_t tboot_addr;			/* 0x058 */
+	struct ist_info ist_info; 		/* 0x060 */
+	uint8_t pad1[0x10];			/* 0x070 */
+	uint8_t hd0_info[0x10];			/* 0x080 */
+	uint8_t hd1_info[0x10];			/* 0x090 */
+	uint8_t sys_desc_table[0x10];		/* 0x0a0 */
+	uint8_t olpc_ofw_header[0x10];		/* 0x0b0 */
+	uint32_t ext_ramdisk_image;		/* 0x0c0 */
+	uint32_t ext_ramdisk_size;		/* 0x0c4 */
+	uint32_t ext_cmd_line_ptr;		/* 0x0c8 */
+	uint8_t pad2[0x74];			/* 0x0cc */
+	uint8_t edid_info[0x80];		/* 0x140 */
+	struct efi_info boot_efi_info;		/* 0x1c0 */
+	uint32_t alt_mem_k;			/* 0x1e0 */
+	uint32_t scratch;			/* 0x1e4 */
+	uint8_t e820_nentries;			/* 0x1e8 */
+	uint8_t eddbuf_entries;			/* 0x1e9 */
+	uint8_t edd_mbr_sig_buf_entries;	/* 0x1ea */
+	uint8_t kbd_status;			/* 0x1eb */
+	uint8_t secure_boot;			/* 0x1ec */
+	uint8_t pad3[0x2];			/* 0x1ed */
+	uint8_t sentinel;			/* 0x1ef */
+	uint8_t pad4;				/* 0x1f0 */
 
 	struct {
-		uint8_t setup_sects;	/* 0x1f1 */
-		uint8_t hdr_pad1[0x1e];	/* 0x1f2 */
-		uint8_t loader_type;	/* 0x210 */
-		uint8_t load_flags;	/* 0x211 */
-		uint8_t hdr_pad2[0x6];	/* 0x212 */
-		uint32_t ramdisk_addr;	/* 0x218 */
-		uint32_t ramdisk_size;	/* 0x21c */
-		uint8_t hdr_pad3[0x8];	/* 0x220 */
-		uint32_t bootargs_addr;	/* 0x228 */
-		uint8_t hdr_pad4[0x8];	/* 0x22c */
-		uint8_t relocatable_kernel; /* 0x234 */
-		uint8_t hdr_pad5[0x13];    /* 0x235 */
-		uint32_t payload_offset;/* 0x248 */
-		uint32_t payload_length;/* 0x24c */
-		uint8_t hdr_pad6[0x8];	/* 0x250 */
-		uint64_t pref_addr;     /* 0x258 */
-		uint8_t hdr_pad7[8];    /* 0x260 */
+		uint8_t setup_sects;		/* 0x1f1 */
+		uint16_t root_flags;		/* 0x1f2 */
+		uint32_t syssize;		/* 0x1f4 */
+		uint16_t ram_size;		/* 0x1f8 */
+		uint16_t vid_mode;		/* 0x1fa */
+		uint16_t root_dev;		/* 0x1fc */
+		uint16_t boot_flag;		/* 0x1fe */
+		uint16_t jump;			/* 0x200 */
+		uint32_t header;		/* 0x202 */
+		uint16_t version;		/* 0x206 */
+		uint32_t realmode_swtch;	/* 0x208 */
+		uint16_t start_sys_seg;		/* 0x20c */
+		uint16_t kernel_version;	/* 0x20e */
+		uint8_t loader_type;		/* 0x210 */
+		uint8_t load_flags;		/* 0x211 */
+#define LOAD_FLAG_LOADED_HIGH	(1<<0)
+#define LOAD_FLAG_KASLR_FLAG	(1<<1)
+#define LOAD_FLAG_QUIET_FLAG	(1<<5)
+#define LOAD_FLAG_KEEP_SEGMENTS	(1<<6)
+#define LOAD_FLAG_CAN_USE_HEAP	(1<<7)
+		uint16_t setup_move_size;	/* 0x212 */
+		uint32_t code32_start;		/* 0x214 */
+		uint32_t ramdisk_addr;		/* 0x218 */
+		uint32_t ramdisk_size;		/* 0x21c */
+		uint32_t bootsect_kludge;	/* 0x220 */
+		uint16_t heap_end_ptr;		/* 0x224 */
+		uint8_t ext_loader_ver;		/* 0x226 */
+		uint8_t ext_loader_type;	/* 0x227 */
+		uint32_t bootargs_addr;		/* 0x228 */
+		uint32_t initrd_addr_max;	/* 0x22c */
+		uint32_t kernel_alignment;	/* 0x230 */
+		uint8_t relocatable_kernel;	/* 0x234 */
+		uint8_t min_alignment;		/* 0x235 */
+		uint16_t xloadflags;		/* 0x236 */
+		uint32_t cmdline_size;		/* 0x238 */
+		uint32_t hardware_subarch;	/* 0x23c */
+		uint64_t hardware_subarch_data;	/* 0x240 */
+		uint32_t payload_offset;	/* 0x248 */
+		uint32_t payload_length;	/* 0x24c */
+		uint64_t setup_data;		/* 0x250 */
+		uint64_t pref_addr;		/* 0x258 */
+		uint32_t init_size;		/* 0x260 */
+		uint32_t handover_offset;	/* 0x264 */
 	} __packed hdr;
 
-	uint8_t pad3[0x68];	/* 0x268 */
+	uint8_t pad5[0x28];			/* 0x268 */
+	uint8_t edd_mbr_sig_buffer[0x40];	/* 0x290 */
 	struct e820_entry entries[0x80];	/* 0x2d0 */
-	uint8_t pad4[0x330];	/* 0xcd0 */
+	uint8_t pad6[0x30];			/* 0xcd0 */
+	uint8_t eddbuf[0x1ec];			/* 0xd00 */
+	uint8_t pad7[0x114];			/* 0xeec */
 } __packed;
 
 #endif
