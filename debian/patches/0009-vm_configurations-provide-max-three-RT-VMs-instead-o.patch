From 0ee5601c9c5ebfa02886e34371df7f6348cf9ea2 Mon Sep 17 00:00:00 2001
From: Helmut Buchsbaum <helmut.buchsbaum@opensource.tttech-industrial.com>
Date: Tue, 21 Apr 2020 12:50:59 +0200
Subject: vm_configurations: provide max three RT VMs instead of only one

Signed-off-by: Helmut Buchsbaum <helmut.buchsbaum@opensource.tttech-industrial.com>
---
 hypervisor/arch/x86/configs/vm_config.c             | 11 ++++++++---
 hypervisor/include/common/vm_uuids.h                |  8 ++++++++
 misc/acrn-config/library/scenario_cfg_lib.py        |  5 +++--
 .../scenario_config/vm_configurations_c.py          | 13 ++-----------
 4 files changed, 21 insertions(+), 16 deletions(-)

diff --git a/hypervisor/arch/x86/configs/vm_config.c b/hypervisor/arch/x86/configs/vm_config.c
index 1f63ef44..a68638aa 100644
--- a/hypervisor/arch/x86/configs/vm_config.c
+++ b/hypervisor/arch/x86/configs/vm_config.c
@@ -11,7 +11,11 @@
 #include <pgtable.h>
 #include <vuart.h>
 
-static uint8_t rtvm_uuid1[16] = POST_RTVM_UUID1;
+static uint8_t rtvm_uuid[3][16] = {
+	POST_RTVM_UUID1,
+	POST_RTVM_UUID2,
+	POST_RTVM_UUID3,
+};
 static uint8_t safety_vm_uuid1[16] = SAFETY_VM_UUID1;
 
 /*
@@ -70,8 +74,9 @@ static bool is_safety_vm_uuid(const uint8_t *uuid)
  */
 static bool is_rtvm_uuid(const uint8_t *uuid)
 {
-	/* TODO: Extend to check more rtvm uuid if we have more than one RTVM. */
-	return uuid_is_equal(uuid, rtvm_uuid1);
+	return uuid_is_equal(uuid, rtvm_uuid[0]) ||
+	       uuid_is_equal(uuid, rtvm_uuid[1]) ||
+	       uuid_is_equal(uuid, rtvm_uuid[2]);
 }
 
 /**
diff --git a/hypervisor/include/common/vm_uuids.h b/hypervisor/include/common/vm_uuids.h
index 4927e09a..89c66cd9 100644
--- a/hypervisor/include/common/vm_uuids.h
+++ b/hypervisor/include/common/vm_uuids.h
@@ -47,6 +47,14 @@
 #define	POST_RTVM_UUID1		{0x49U, 0x5aU, 0xe2U, 0xe5U, 0x26U, 0x03U, 0x4dU, 0x64U, \
 				 0xafU, 0x76U, 0xd4U, 0xbcU, 0x5aU, 0x8eU, 0xc0U, 0xe5U}
 
+/* 4b4d5d02-0909-4ca1-a2c2-acd0330d07bb */
+#define	POST_RTVM_UUID2		{0x4bU, 0x4dU, 0x5dU, 0x02U, 0x09U, 0x09U, 0x4cU, 0xa1U, \
+				 0xa2U, 0xc2U, 0xacU, 0xd0U, 0x33U, 0x0dU, 0x07U, 0xbbU}
+
+/* da40d15c-1221-45aa-b0d6-f908fb347614 */
+#define	POST_RTVM_UUID3		{0xdaU, 0x40U, 0xd1U, 0x5cU, 0x12U, 0x21U, 0x45U, 0xaaU, \
+				 0xb0U, 0xd6U, 0xf9U, 0x08U, 0xfbU, 0x34U, 0x76U, 0x14U}
+
 /* a7ada506-1ab0-4b6b-a0da-e513ca9b8c2f */
 #define KATA_VM_UUID1		{0xa7U, 0xadU, 0xa5U, 0x06U, 0x1aU, 0xb0U, 0x4bU, 0x6bU, \
 				 0xa0U, 0xdaU, 0xe5U, 0x13U, 0xcaU, 0x9bU, 0x8cU, 0x2fU}
diff --git a/misc/acrn-config/library/scenario_cfg_lib.py b/misc/acrn-config/library/scenario_cfg_lib.py
index 5cec359a..576b704a 100644
--- a/misc/acrn-config/library/scenario_cfg_lib.py
+++ b/misc/acrn-config/library/scenario_cfg_lib.py
@@ -44,7 +44,8 @@ UUID_DB = {
     'PRE_STD_VM':['26c5e0d8-8f8a-47d8-8109-f201ebd61a5e', 'dd87ce08-66f9-473d-bc58-7605837f935e'],
     'POST_STD_VM':['d2795438-25d6-11e8-864e-cb7a18b34643', '615db82a-e189-4b4f-8dbb-d321343e4ab3',
         '38158821-5208-4005-b72a-8a609e4190d0', 'a6750180-f87a-48d2-91d9-4e7f62b6519e', 'd1816e4a-a9bb-4cb4-a066-3f1a8a5ce73f'],
-    'POST_RT_VM':['495ae2e5-2603-4d64-af76-d4bc5a8ec0e5'],
+    'POST_RT_VM':['495ae2e5-2603-4d64-af76-d4bc5a8ec0e5', '4b4d5d02-0909-4ca1-a2c2-acd0330d07bb',
+        'da40d15c-1221-45aa-b0d6-f908fb347614'],
     'KATA_VM':['a7ada506-1ab0-4b6b-a0da-e513ca9b8c2f'],
 }
 
@@ -155,7 +156,7 @@ def load_vm_check(load_vms, item):
         if "KATA_VM" == load_str:
             kata_vm_ids.append(order_i)
 
-        if "POST_RT_VM" == load_str:
+        if "POST_RT_VM" == VM_DB[load_str]['load_type']:
             rt_vm_ids.append(order_i)
 
     KATA_VM_COUNT = len(kata_vm_ids)
diff --git a/misc/acrn-config/scenario_config/vm_configurations_c.py b/misc/acrn-config/scenario_config/vm_configurations_c.py
index 3c8204e0..24992afb 100644
--- a/misc/acrn-config/scenario_config/vm_configurations_c.py
+++ b/misc/acrn-config/scenario_config/vm_configurations_c.py
@@ -25,21 +25,12 @@ def get_pre_vm_type(vm_type, vm_i):
             i_cnt += 1
     return "CONFIG_PRE_STD_VM({})".format(i_cnt)
 
-
 def get_post_vm_type(vm_type, vm_i):
-
-    if vm_type == "KATA_VM":
-        return "CONFIG_KATA_VM(1)"
-
-    if vm_type == "POST_RT_VM":
-        return "CONFIG_POST_RT_VM(1)"
-
     i_cnt = 0
     for i,v_type in common.VM_TYPES.items():
-        if v_type == "POST_STD_VM" and i <= vm_i:
+        if v_type == vm_type and i <= vm_i:
             i_cnt += 1
-    return "CONFIG_POST_STD_VM({})".format(i_cnt)
-
+    return "CONFIG_{}({})".format(vm_type, i_cnt)
 
 def vuart0_output(i, vm_type, vm_info, config):
     """
-- 
2.20.1

