From: Helmut Buchsbaum <helmut.buchsbaum@opensource.tttech-industrial.com>
Date: Wed, 16 Sep 2020 12:12:50 +0200
Subject: hv: add vm_console command line parameter for debug build

To be able to debug the startup of a VM (e.g. the SOS), provide the
commandline parameter 'vm_console' to automatically switch the console
to the respective VM thus providing the entire serial output of it.

Use vm_console=<vm_id> with a decimal vm_id to switch to this VM, e.g.
the 'vm_console=0' usually switches to the SOS VUART as soon as
the VM is started.

Signed-off-by: Helmut Buchsbaum <helmut.buchsbaum@opensource.tttech-industrial.com>
---
 hypervisor/arch/x86/guest/vm.c   |  4 ++++
 hypervisor/boot/cmdline.c        | 18 +++++++++++++++---
 hypervisor/debug/shell.c         | 36 ++++++++++++++++++++++++++++++------
 hypervisor/include/debug/shell.h |  4 ++++
 4 files changed, 53 insertions(+), 9 deletions(-)

diff --git a/hypervisor/arch/x86/guest/vm.c b/hypervisor/arch/x86/guest/vm.c
index 1a3f6f5..aa2f712 100644
--- a/hypervisor/arch/x86/guest/vm.c
+++ b/hypervisor/arch/x86/guest/vm.c
@@ -32,6 +32,7 @@
 #include <pci_dev.h>
 #include <vacpi.h>
 #include <platform_caps.h>
+#include <shell.h>
 
 vm_sw_loader_t vm_sw_loader;
 
@@ -757,6 +758,9 @@ void prepare_vm(uint16_t vm_id, struct acrn_vm_config *vm_config)
 		start_vm(vm);
 
 		pr_acrnlog("Start VM id: %x name: %s", vm_id, vm_config->name);
+#ifndef CONFIG_RELEASE
+		(void)switch_vm_console(vm_id);
+#endif
 	}
 }
 
diff --git a/hypervisor/boot/cmdline.c b/hypervisor/boot/cmdline.c
index 72bed57..a573a9b 100644
--- a/hypervisor/boot/cmdline.c
+++ b/hypervisor/boot/cmdline.c
@@ -9,6 +9,15 @@
 #include <boot.h>
 #include <pgtable.h>
 #include <dbg_cmd.h>
+#include <shell.h>
+
+/* hypervisor command parameters are handler here */
+static bool (*cmd_handler[])(const char *cmd, int32_t len) = {
+	handle_dbg_cmd,
+#ifndef CONFIG_RELEASE
+	handle_console_cmd,
+#endif
+};
 
 void parse_hv_cmdline(void)
 {
@@ -23,15 +32,18 @@ void parse_hv_cmdline(void)
 		while ((*start) == ' ')
 			start++;
 		if ((*start) != '\0') {
+			size_t i;
+
 			end = start + 1;
 			while ((*end != ' ') && ((*end) != '\0'))
 				end++;
 
-			if (!handle_dbg_cmd(start, (int32_t)(end - start))) {
-				/* if not handled by handle_dbg_cmd, it can be handled further */
+			for (i = 0; i < ARRAY_SIZE(cmd_handler); ++i) {
+				if (cmd_handler[i](start, (int32_t)(end - start)))
+					break;
 			}
+
 			start = end;
 		}
 	}
-
 }
diff --git a/hypervisor/debug/shell.c b/hypervisor/debug/shell.c
index c0da0c8..3ca9e8f 100644
--- a/hypervisor/debug/shell.c
+++ b/hypervisor/debug/shell.c
@@ -29,6 +29,7 @@
 
 #define SHELL_LOG_BUF_SIZE		(PAGE_SIZE * MAX_PCPU_NUM)
 static char shell_log_buf[SHELL_LOG_BUF_SIZE];
+static uint16_t shell_vm_id = -1;
 
 /* Input Line Other - Switch to the "other" input line (there are only two
  * input lines total).
@@ -957,18 +958,13 @@ static int32_t shell_dump_guest_mem(int32_t argc, char **argv)
 	return ret;
 }
 
-static int32_t shell_to_vm_console(int32_t argc, char **argv)
+static int32_t shell_vm_console(uint16_t vm_id)
 {
 	char temp_str[TEMP_STR_SIZE];
-	uint16_t vm_id = 0U;
 
 	struct acrn_vm *vm;
 	struct acrn_vuart *vu;
 
-	if (argc == 2) {
-		vm_id = sanitize_vmid((uint16_t)strtol_deci(argv[1]));
-	}
-
 	/* Get the virtual device node */
 	vm = get_vm_from_vmid(vm_id);
 	if (is_poweroff_vm(vm)) {
@@ -989,6 +985,34 @@ static int32_t shell_to_vm_console(int32_t argc, char **argv)
 	return 0;
 }
 
+static int32_t shell_to_vm_console(int32_t argc, char **argv)
+{
+	uint16_t vm_id = 0U;
+
+	if (argc == 2) {
+		vm_id = sanitize_vmid((uint16_t)strtol_deci(argv[1]));
+	}
+
+	return shell_vm_console(vm_id);
+}
+
+bool handle_console_cmd(const char *cmd, int32_t len)
+{
+	if ((len < 12) || strncmp(cmd, "vm_console=", 11))
+		return false;
+
+	shell_vm_id = sanitize_vmid((uint16_t)strtol_deci(&cmd[11]));
+	return true;
+}
+
+int32_t switch_vm_console(uint16_t vm_id)
+{
+	if (shell_vm_id == vm_id)
+		return shell_vm_console(vm_id);
+
+	return 0;
+}
+
 /**
  * @brief Get the interrupt statistics
  *
diff --git a/hypervisor/include/debug/shell.h b/hypervisor/include/debug/shell.h
index 3534e4e..399deb0 100644
--- a/hypervisor/include/debug/shell.h
+++ b/hypervisor/include/debug/shell.h
@@ -7,8 +7,12 @@
 #ifndef SHELL_H
 #define SHELL_H
 
+#include <types.h>
+
 void shell_init(void);
 void shell_kick(void);
+bool handle_console_cmd(const char *cmd, int32_t len);
+int32_t switch_vm_console(uint16_t vm_id);
 
 void set_vmexit_sample_flag(bool to_enable);
 bool is_vmexit_sample_enabled(void);
