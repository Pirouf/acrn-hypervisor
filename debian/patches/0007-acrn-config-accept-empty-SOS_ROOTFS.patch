From: Helmut Buchsbaum <helmut.buchsbaum@opensource.tttech-industrial.com>
Date: Sun, 26 Apr 2020 09:45:58 +0200
Subject: acrn-config: accept empty SOS_ROOTFS

Since most distributions generate the rottfs kernel parameter at
generation of its bootloader config, do not force the setting of
rootfs via SOS VM comfiguration. This can interfere with generated
bootloader config especially when using direct boot mode.

E.g. Debian usually generate rootfs=UUID=<xxx> parameter which then
is overwritten by the VM configuration.

Signed-off-by: Helmut Buchsbaum <helmut.buchsbaum@opensource.tttech-industrial.com>
---
 misc/acrn-config/board_config/misc_cfg_h.py       |  6 +++++-
 misc/acrn-config/library/scenario_cfg_lib.py      | 16 ----------------
 misc/acrn-config/scenario_config/scenario_item.py |  1 -
 3 files changed, 5 insertions(+), 18 deletions(-)

diff --git a/misc/acrn-config/board_config/misc_cfg_h.py b/misc/acrn-config/board_config/misc_cfg_h.py
index 3049f70..69c40d1 100644
--- a/misc/acrn-config/board_config/misc_cfg_h.py
+++ b/misc/acrn-config/board_config/misc_cfg_h.py
@@ -246,7 +246,11 @@ def generate_file(config):
     # sos rootfs and console
     print("", file=config)
     if "SOS_VM" in common.VM_TYPES.values():
-        print('#define SOS_ROOTFS\t\t"root={} "'.format(sos_rootfs[0]), file=config)
+        if sos_rootfs and sos_rootfs[0]:
+            print('#define SOS_ROOTFS\t\t"root={} "'.format(sos_rootfs[0]), file=config)
+        else:
+            common.print_yel("misc_cfg.h: SOS_ROOTFS not set", warn=True)
+            print('#define SOS_ROOTFS', file=config)
         if ttys_n:
             print('#define SOS_CONSOLE\t\t"console={} "'.format(ttys_n), file=config)
         else:
diff --git a/misc/acrn-config/library/scenario_cfg_lib.py b/misc/acrn-config/library/scenario_cfg_lib.py
index eaf3651..ebf909f 100644
--- a/misc/acrn-config/library/scenario_cfg_lib.py
+++ b/misc/acrn-config/library/scenario_cfg_lib.py
@@ -91,22 +91,6 @@ def get_pci_num(pci_devs):
     return pci_devs_num
 
 
-def check_board_private_info():
-
-    if 'SOS_VM' not in common.VM_TYPES.values():
-        return
-    branch_tag = "board_private"
-    private_info = {}
-    dev_private_tags = ['rootfs']
-    for tag_str in dev_private_tags:
-        dev_setting = common.get_leaf_tag_map(common.SCENARIO_INFO_FILE, branch_tag, tag_str)
-        private_info[tag_str] = dev_setting
-
-    if not private_info['rootfs'] and err_dic:
-        ERR_LIST['vm:id=0,boot_private,rootfs'] = "The board have to chose one rootfs partition"
-        ERR_LIST.update(err_dic)
-
-
 def vm_name_check(vm_names, item):
     """
     Check vm name
diff --git a/misc/acrn-config/scenario_config/scenario_item.py b/misc/acrn-config/scenario_config/scenario_item.py
index 35642a2..02b042d 100644
--- a/misc/acrn-config/scenario_config/scenario_item.py
+++ b/misc/acrn-config/scenario_config/scenario_item.py
@@ -137,7 +137,6 @@ class VuartInfo:
         Check all items in this class
         :return: None
         """
-        scenario_cfg_lib.check_board_private_info()
         scenario_cfg_lib.check_vuart(self.v0_vuart, self.v1_vuart)
 
 class MemInfo:
