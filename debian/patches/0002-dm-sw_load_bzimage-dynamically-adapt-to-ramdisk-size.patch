From 14d19f806494d69edc625298f19c88fbb1997860 Mon Sep 17 00:00:00 2001
From: Helmut Buchsbaum <helmut.buchsbaum@opensource.tttech-industrial.com>
Date: Tue, 21 Jan 2020 13:57:33 +0100
Subject: [PATCH 02/18] dm: sw_load_bzimage: dynamically adapt to ramdisk size

To remove the limit of 4MB ramdisk size simply adjust layout dynamically
according to ramdisk size rounde up to a 4K boundary. This enables
ramdisk based virtual machines which tend to have large remadisk memory
requirements (128MB and above).

Signed-off-by: Helmut Buchsbaum <helmut.buchsbaum@opensource.tttech-industrial.com>
---
 devicemodel/core/sw_load_bzimage.c | 18 ++++++------------
 1 file changed, 6 insertions(+), 12 deletions(-)

diff --git a/devicemodel/core/sw_load_bzimage.c b/devicemodel/core/sw_load_bzimage.c
index 7045d2c5..69438c24 100644
--- a/devicemodel/core/sw_load_bzimage.c
+++ b/devicemodel/core/sw_load_bzimage.c
@@ -50,9 +50,9 @@
  * +-----------------------------------------------------+
  * | ...                                                 |
  * +-----------------------------------------------------+
- * | offset: lowmem - 4MB - 2K (kernel gdt)              |
+ * | offset: lowmem - RAMDISK_LOAD_SIZE - 2K (kernel gdt)|
  * +-----------------------------------------------------+
- * | offset: lowmem - 4MB (ramdisk image)                |
+ * | offset: lowmem - RAMDISK_LOAD_SIZE (ramdisk image)  |
  * +-----------------------------------------------------+
  * | offset: lowmem - 8K (bootargs)                      |
  * +-----------------------------------------------------+
@@ -63,8 +63,10 @@
  */
 
 /* Check default e820 table in sw_load_common.c for info about ctx->lowmem */
-#define	GDT_LOAD_OFF(ctx)	(ctx->lowmem - 4*MB - 2* KB)
-#define RAMDISK_LOAD_OFF(ctx)	(ctx->lowmem - 4*MB)
+/* use ramdisk size for ramdisk load offset, leave 8KB room for bootargs */
+#define RAMDISK_LOAD_SIZE	roundup2(ramdisk_size + 8*KB, 4*KB)
+#define GDT_LOAD_OFF(ctx)	(ctx->lowmem - RAMDISK_LOAD_SIZE - 2* KB)
+#define RAMDISK_LOAD_OFF(ctx)	(ctx->lowmem - RAMDISK_LOAD_SIZE)
 #define BOOTARGS_LOAD_OFF(ctx)	(ctx->lowmem - 8*KB)
 #define KERNEL_ENTRY_OFF(ctx)	(ctx->lowmem - 6*KB)
 #define ZEROPAGE_LOAD_OFF(ctx)	(ctx->lowmem - 4*KB)
@@ -183,14 +185,6 @@ acrn_prepare_ramdisk(struct vmctx *ctx)
 		return -1;
 	}
 
-	if (len > (BOOTARGS_LOAD_OFF(ctx) - RAMDISK_LOAD_OFF(ctx))) {
-		pr_err("SW_LOAD ERR: the size of ramdisk file is too big"
-				" file len=0x%lx, limit is 0x%lx\n", len,
-				BOOTARGS_LOAD_OFF(ctx) - RAMDISK_LOAD_OFF(ctx));
-		fclose(fp);
-		return -1;
-	}
-
 	fseek(fp, 0, SEEK_SET);
 	read = fread(ctx->baseaddr + RAMDISK_LOAD_OFF(ctx),
 			sizeof(char), len, fp);
-- 
2.20.1

